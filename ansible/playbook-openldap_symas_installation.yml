---

- name: 'Install OpenLDAP'
  hosts: 'k3s1'
  gather_facts: true
  become: false
  module_defaults:
    kubernetes.core.helm:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s_info:
      kubeconfig: './k3s-kubeconfig'

  tasks:

    - name: 'Create the openldap namespace'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        name: 'openldap'
        api_version: 'v1'
        kind: 'Namespace'
        state: 'present'

    - name: 'Install OpenLDAP using the Symas chart'
      delegate_to: 'localhost'
      kubernetes.core.helm:
        chart_repo_url: 'https://symas.github.io/helm-openldap/'
        chart_ref: 'openldap'
        release_name: 'openldap'
        release_namespace: 'openldap'
        release_values:
          env:
            LDAP_SKIP_DEFAULT_TREE: "yes"
          global:
            ldapDomain: "DC=openldap,DC=example,DC=org"
            adminPassword: "dobby"
            configPassword: "dobby"
          customLdifFiles:
            00-root.ldif: |-
              dn: DC=openldap,DC=example,DC=org
              objectclass: dcObject
              objectclass: organization
              dc: openldap
              o: Example, Inc
            10-data.ldif: |-
              dn: OU=Users,DC=openldap,DC=example,DC=org
              objectClass: organizationalUnit
              ou: users

              dn: OU=Groups,DC=openldap,DC=example,DC=org
              objectClass: organizationalUnit
              ou: Groups

              dn: CN=hpotter,OU=Users,DC=openldap,DC=example,DC=org
              objectClass: user
              cn: hpotter
              givenName: Harry
              sn: Potter
              samAccountName: hpotter
              mail: hpotter@hogwarts.invalid
              title: Tester
              telephoneNumber: 123-456-7890
              userPassword: dobby

              dn: CN=hgranger,OU=Users,DC=openldap,DC=example,DC=org
              objectClass: user
              cn: hgranger
              givenName: Hermione
              sn: Granger
              samAccountName: hgranger
              mail: hgranger@hogwarts.invalid
              title: Tester
              telephoneNumber: 123-456-7890
              userPassword: dobby

              dn: CN=rweasley,OU=Users,DC=openldap,DC=example,DC=org
              objectClass: user
              cn: rweasley
              givenName: Ron
              sn: Weasley
              samAccountName: rweasley
              mail: rweasley@hogwarts.invalid
              title: Tester
              telephoneNumber: 123-456-7890
              userPassword: dobby

              dn: CN=k8s-cluster-admins,OU=Groups,DC=openldap,DC=example,DC=org
              objectClass: group
              cn: k8s-cluster-admins
              member: CN=hpotter,OU=Users,DC=openldap,DC=example,DC=org

              dn: CN=group2,OU=Groups,DC=openldap,DC=example,DC=org
              objectClass: group
              cn: group2
              member: CN=hpotter,OU=Users,DC=openldap,DC=example,DC=org

              dn: CN=k8s-create-ns,OU=Groups,DC=openldap,DC=example,DC=org
              objectClass: group
              cn: k8s-create-ns
              member: CN=hgranger,OU=Users,DC=openldap,DC=example,DC=org
          ltb-passwd:
            ingress:
              enabled: true
              path: /
              hosts:
                - "password.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
          phpldapadmin:
            ingress:
              enabled: true
              path: /
              hosts:
                - "phpldapadmin.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"

    - name: 'Wait until all pods in the openldap namespace are running'
      delegate_to: localhost
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: openldap
      register: pod_list
      until: |
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running"]
        or
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running", "Succeeded"]
      retries: 12
      delay: 10

    - name: 'Create an ingressrouteTCP for OpenLDAP'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: traefik.io/v1alpha1
          kind: IngressRouteTCP
          metadata:
            name: openldap-tcp
            namespace: openldap
          spec:
            entryPoints:
              - ldap-tcp
            routes:
            - match: HostSNI(`*`)
              services:
              - name: openldap
                port: 1389

    - name: 'Create an ingressrouteUDP for OpenLDAP'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: traefik.io/v1alpha1
          kind: IngressRouteUDP
          metadata:
            name: openldap-udp
            namespace: openldap
          spec:
            entryPoints:
              - ldap-udp
            routes:
            - match: HostSNI(`*`)
              services:
              - name: openldap
                port: 1389

    - name: 'Wait for the phpldapadmin URL to be reachable'
      ansible.builtin.uri:
        url: "http://phpldapadmin.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
      register: result
      until: "result.status == 302 or result.status == 200"
      retries: 11
      delay: 10

    - name: 'Wait for the password URL to be reachable'
      ansible.builtin.uri:
        url: "http://password.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
      register: result
      until: "result.status == 302 or result.status == 200"
      retries: 11
      delay: 10

    - name: 'The password change self-service URL'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: "The password change self-service is reachable here: http://password.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"

    - name: 'phpldapadmin URL'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: "phpldapadmin is reachable here: http://phpldapadmin.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
